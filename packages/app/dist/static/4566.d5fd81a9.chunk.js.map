{"version":3,"file":"static/4566.d5fd81a9.chunk.js","mappings":"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","sources":["webpack://app/../../node_modules/@graphiql/react/dist/mode.es3.js","webpack://app/../../node_modules/@graphiql/react/dist/onlineParser.es.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { C as CodeMirror } from \"./codemirror.es.js\";\nimport \"graphql\";\nimport { p, l as list, o as opt, t } from \"./index.es.js\";\nimport { o as onlineParser } from \"./onlineParser.es.js\";\nimport \"react\";\nimport \"react-dom\";\nCodeMirror.defineMode(\"graphql-variables\", (config) => {\n  const parser = onlineParser({\n    eatWhitespace: (stream) => stream.eatSpace(),\n    lexRules: LexRules,\n    parseRules: ParseRules,\n    editorConfig: { tabSize: config.tabSize }\n  });\n  return {\n    config,\n    startState: parser.startState,\n    token: parser.token,\n    indent,\n    electricInput: /^\\s*[}\\]]/,\n    fold: \"brace\",\n    closeBrackets: {\n      pairs: '[]{}\"\"',\n      explode: \"[]{}\"\n    }\n  };\n});\nfunction indent(state, textAfter) {\n  var _a, _b;\n  const levels = state.levels;\n  const level = !levels || levels.length === 0 ? state.indentLevel : levels[levels.length - 1] - (((_a = this.electricInput) === null || _a === void 0 ? void 0 : _a.test(textAfter)) ? 1 : 0);\n  return (level || 0) * (((_b = this.config) === null || _b === void 0 ? void 0 : _b.indentUnit) || 0);\n}\n__name(indent, \"indent\");\nconst LexRules = {\n  Punctuation: /^\\[|]|\\{|\\}|:|,/,\n  Number: /^-?(?:0|(?:[1-9][0-9]*))(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?/,\n  String: /^\"(?:[^\"\\\\]|\\\\(?:\"|\\/|\\\\|b|f|n|r|t|u[0-9a-fA-F]{4}))*\"?/,\n  Keyword: /^true|false|null/\n};\nconst ParseRules = {\n  Document: [p(\"{\"), list(\"Variable\", opt(p(\",\"))), p(\"}\")],\n  Variable: [namedKey(\"variable\"), p(\":\"), \"Value\"],\n  Value(token) {\n    switch (token.kind) {\n      case \"Number\":\n        return \"NumberValue\";\n      case \"String\":\n        return \"StringValue\";\n      case \"Punctuation\":\n        switch (token.value) {\n          case \"[\":\n            return \"ListValue\";\n          case \"{\":\n            return \"ObjectValue\";\n        }\n        return null;\n      case \"Keyword\":\n        switch (token.value) {\n          case \"true\":\n          case \"false\":\n            return \"BooleanValue\";\n          case \"null\":\n            return \"NullValue\";\n        }\n        return null;\n    }\n  },\n  NumberValue: [t(\"Number\", \"number\")],\n  StringValue: [t(\"String\", \"string\")],\n  BooleanValue: [t(\"Keyword\", \"builtin\")],\n  NullValue: [t(\"Keyword\", \"keyword\")],\n  ListValue: [p(\"[\"), list(\"Value\", opt(p(\",\"))), p(\"]\")],\n  ObjectValue: [p(\"{\"), list(\"ObjectField\", opt(p(\",\"))), p(\"}\")],\n  ObjectField: [namedKey(\"attribute\"), p(\":\"), \"Value\"]\n};\nfunction namedKey(style) {\n  return {\n    style,\n    match: (token) => token.kind === \"String\",\n    update(state, token) {\n      state.name = token.value.slice(1, -1);\n    }\n  };\n}\n__name(namedKey, \"namedKey\");\n","var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { i as isIgnored, L as LexRules, P as ParseRules } from \"./index.es.js\";\nimport { Kind } from \"graphql\";\nfunction onlineParser(options = {\n  eatWhitespace: (stream) => stream.eatWhile(isIgnored),\n  lexRules: LexRules,\n  parseRules: ParseRules,\n  editorConfig: {}\n}) {\n  return {\n    startState() {\n      const initialState = {\n        level: 0,\n        step: 0,\n        name: null,\n        kind: null,\n        type: null,\n        rule: null,\n        needsSeparator: false,\n        prevState: null\n      };\n      pushRule(options.parseRules, initialState, Kind.DOCUMENT);\n      return initialState;\n    },\n    token(stream, state) {\n      return getToken(stream, state, options);\n    }\n  };\n}\n__name(onlineParser, \"onlineParser\");\nfunction getToken(stream, state, options) {\n  var _a;\n  if (state.inBlockstring) {\n    if (stream.match(/.*\"\"\"/)) {\n      state.inBlockstring = false;\n      return \"string\";\n    } else {\n      stream.skipToEnd();\n      return \"string\";\n    }\n  }\n  const { lexRules, parseRules, eatWhitespace, editorConfig } = options;\n  if (state.rule && state.rule.length === 0) {\n    popRule(state);\n  } else if (state.needsAdvance) {\n    state.needsAdvance = false;\n    advanceRule(state, true);\n  }\n  if (stream.sol()) {\n    const tabSize = (editorConfig === null || editorConfig === void 0 ? void 0 : editorConfig.tabSize) || 2;\n    state.indentLevel = Math.floor(stream.indentation() / tabSize);\n  }\n  if (eatWhitespace(stream)) {\n    return \"ws\";\n  }\n  const token = lex(lexRules, stream);\n  if (!token) {\n    const matchedSomething = stream.match(/\\S+/);\n    if (!matchedSomething) {\n      stream.match(/\\s/);\n    }\n    pushRule(SpecialParseRules, state, \"Invalid\");\n    return \"invalidchar\";\n  }\n  if (token.kind === \"Comment\") {\n    pushRule(SpecialParseRules, state, \"Comment\");\n    return \"comment\";\n  }\n  const backupState = assign({}, state);\n  if (token.kind === \"Punctuation\") {\n    if (/^[{([]/.test(token.value)) {\n      if (state.indentLevel !== void 0) {\n        state.levels = (state.levels || []).concat(state.indentLevel + 1);\n      }\n    } else if (/^[})\\]]/.test(token.value)) {\n      const levels = state.levels = (state.levels || []).slice(0, -1);\n      if (state.indentLevel) {\n        if (levels.length > 0 && levels[levels.length - 1] < state.indentLevel) {\n          state.indentLevel = levels[levels.length - 1];\n        }\n      }\n    }\n  }\n  while (state.rule) {\n    let expected = typeof state.rule === \"function\" ? state.step === 0 ? state.rule(token, stream) : null : state.rule[state.step];\n    if (state.needsSeparator) {\n      expected = expected === null || expected === void 0 ? void 0 : expected.separator;\n    }\n    if (expected) {\n      if (expected.ofRule) {\n        expected = expected.ofRule;\n      }\n      if (typeof expected === \"string\") {\n        pushRule(parseRules, state, expected);\n        continue;\n      }\n      if ((_a = expected.match) === null || _a === void 0 ? void 0 : _a.call(expected, token)) {\n        if (expected.update) {\n          expected.update(state, token);\n        }\n        if (token.kind === \"Punctuation\") {\n          advanceRule(state, true);\n        } else {\n          state.needsAdvance = true;\n        }\n        return expected.style;\n      }\n    }\n    unsuccessful(state);\n  }\n  assign(state, backupState);\n  pushRule(SpecialParseRules, state, \"Invalid\");\n  return \"invalidchar\";\n}\n__name(getToken, \"getToken\");\nfunction assign(to, from) {\n  const keys = Object.keys(from);\n  for (let i = 0; i < keys.length; i++) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n__name(assign, \"assign\");\nconst SpecialParseRules = {\n  Invalid: [],\n  Comment: []\n};\nfunction pushRule(rules, state, ruleKind) {\n  if (!rules[ruleKind]) {\n    throw new TypeError(\"Unknown rule: \" + ruleKind);\n  }\n  state.prevState = Object.assign({}, state);\n  state.kind = ruleKind;\n  state.name = null;\n  state.type = null;\n  state.rule = rules[ruleKind];\n  state.step = 0;\n  state.needsSeparator = false;\n}\n__name(pushRule, \"pushRule\");\nfunction popRule(state) {\n  if (!state.prevState) {\n    return;\n  }\n  state.kind = state.prevState.kind;\n  state.name = state.prevState.name;\n  state.type = state.prevState.type;\n  state.rule = state.prevState.rule;\n  state.step = state.prevState.step;\n  state.needsSeparator = state.prevState.needsSeparator;\n  state.prevState = state.prevState.prevState;\n}\n__name(popRule, \"popRule\");\nfunction advanceRule(state, successful) {\n  var _a;\n  if (isList(state) && state.rule) {\n    const step = state.rule[state.step];\n    if (step.separator) {\n      const separator = step.separator;\n      state.needsSeparator = !state.needsSeparator;\n      if (!state.needsSeparator && separator.ofRule) {\n        return;\n      }\n    }\n    if (successful) {\n      return;\n    }\n  }\n  state.needsSeparator = false;\n  state.step++;\n  while (state.rule && !(Array.isArray(state.rule) && state.step < state.rule.length)) {\n    popRule(state);\n    if (state.rule) {\n      if (isList(state)) {\n        if ((_a = state.rule) === null || _a === void 0 ? void 0 : _a[state.step].separator) {\n          state.needsSeparator = !state.needsSeparator;\n        }\n      } else {\n        state.needsSeparator = false;\n        state.step++;\n      }\n    }\n  }\n}\n__name(advanceRule, \"advanceRule\");\nfunction isList(state) {\n  const step = Array.isArray(state.rule) && typeof state.rule[state.step] !== \"string\" && state.rule[state.step];\n  return step && step.isList;\n}\n__name(isList, \"isList\");\nfunction unsuccessful(state) {\n  while (state.rule && !(Array.isArray(state.rule) && state.rule[state.step].ofRule)) {\n    popRule(state);\n  }\n  if (state.rule) {\n    advanceRule(state, false);\n  }\n}\n__name(unsuccessful, \"unsuccessful\");\nfunction lex(lexRules, stream) {\n  const kinds = Object.keys(lexRules);\n  for (let i = 0; i < kinds.length; i++) {\n    const match = stream.match(lexRules[kinds[i]]);\n    if (match && match instanceof Array) {\n      return { kind: kinds[i], value: match[0] };\n    }\n  }\n}\n__name(lex, \"lex\");\nexport { onlineParser as o };\n"],"names":["__defProp","__name","target","value","config","parser","stream","LexRules","ParseRules","indent","state","textAfter","_a","_b","levels","namedKey","token","style","onlineParser","options","initialState","pushRule","getToken","lexRules","parseRules","eatWhitespace","editorConfig","popRule","advanceRule","tabSize","lex","SpecialParseRules","backupState","assign","expected","unsuccessful","to","from","keys","i","rules","ruleKind","successful","isList","step","separator","kinds","match"],"sourceRoot":""}