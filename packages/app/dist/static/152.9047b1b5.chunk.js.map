{"version":3,"file":"static/152.9047b1b5.chunk.js","mappings":"qZAkCA,MAAMA,EAAc;AAAA;AAAA;AAAA;AAAA;AAAA,uBAMdC,KAAY,KACfC,IAAW,CACV,KAAM,CACJ,aAAc,EACd,OAAQA,EAAM,QAAQ,EAAG,CAAC,EAC1B,WAAYA,EAAM,QAAQ,OAAS,OAAS,OAASA,EAAM,QAAQ,OAAO,KAC5E,CACF,GACA,CAAE,KAAM,oCAAqC,CAC/C,EACA,SAASC,GAAwB,CAC/B,MAAMC,EAAUH,EAAU,EAC1B,OAAuB,gBAAoB,WAAgB,KAAsB,gBAAoB,IAAY,CAAE,QAAS,OAAQ,EAAG,oHAAoH,EAAmB,gBAAoB,MAAO,CAAE,UAAWG,EAAQ,IAAK,EAAmB,gBACpV,KACA,CACE,KAAMJ,EACN,SAAU,OACV,gBAAiB,GACjB,mBAAoB,CAAC,EAAG,EAAG,EAAG,CAAC,EAC/B,YAAa,CAAE,WAAY,UAAW,SAAU,MAAO,CACzD,CACF,CAAC,EAAmB,gBAClB,IACA,CACE,QAAS,YACT,MAAO,UACP,OAAQ,SACR,KAAM,sFACR,EACA,WACF,CAAC,CACH,CAEA,MAAMK,EAAmBC,GAAU,CACjC,IAAIC,EACJ,KAAM,CAAE,KAAAC,EAAO,OAAQ,QAAAC,CAAQ,EAAIH,EAC7B,CAAE,OAAAI,CAAO,KAAI,MAAU,EACvBC,KAAM,MAAO,EACbC,EAAgBC,GAAQ,CAC5B,IAAIC,EACJ,OAAOD,IAAOC,EAAMH,EAAI,cAAcE,CAAG,IAAM,KAAOC,EAAqB,GAC7E,EACMC,GAASR,EAAKG,GAAU,KAAO,OAASA,EAAO,WAAa,KAAO,OAASH,EAAG,MACrF,OAAuB,gBAAoB,KAAU,CAAE,MAAO,QAAS,QAAAE,CAAQ,EAAG,CAACM,GAASA,EAAM,SAAW,EAAoB,gBAAoBZ,EAAuB,IAAI,EAAoB,gBAClM,IACA,CACE,KAAAK,EACA,MAAOO,EAAM,IAAI,CAAC,CAAE,IAAAC,EAAK,MAAAC,EAAO,KAAAC,CAAK,KAAO,CAC1C,KAAMD,GAAS,KAAOA,EAAQD,EAC9B,KAAMA,EACN,KAAMJ,EAAaM,CAAI,CACzB,EAAE,CACJ,CACF,CAAC,CACH,C","sources":["webpack://app/../../node_modules/@backstage/plugin-catalog/dist/esm/index-23b588f4.esm.js"],"sourcesContent":["import { useEntity } from '@backstage/plugin-catalog-react';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport React from 'react';\nimport { makeStyles, Typography, Button } from '@material-ui/core';\nimport { CodeSnippet, InfoCard } from '@backstage/core-components';\nimport { L as LinksGridList } from './index-1f8f0bf2.esm.js';\nimport { useApp } from '@backstage/core-plugin-api';\nimport 'zen-observable';\nimport '@backstage/catalog-model';\nimport 'lodash';\nimport '@backstage/integration-react';\nimport '@backstage/plugin-scaffolder-common';\nimport '@material-ui/icons/AddCircleOutline';\nimport '@material-ui/icons/Cached';\nimport '@material-ui/icons/Description';\nimport '@material-ui/icons/Edit';\nimport 'pluralize';\nimport 'react-use/lib/useAsync';\nimport '@material-ui/core/styles';\nimport '@material-ui/icons/OpenInNew';\nimport '@material-ui/icons/Star';\nimport '@material-ui/icons/StarBorder';\nimport '@material-ui/lab';\nimport 'react-router-dom';\nimport '@material-ui/icons/BugReport';\nimport '@material-ui/icons/MoreVert';\nimport '@material-ui/icons/FileCopyTwoTone';\nimport '@backstage/plugin-catalog-react/alpha';\nimport '@backstage/plugin-catalog-common/alpha';\nimport '@material-ui/icons/Cancel';\nimport '@backstage/errors';\nimport '@backstage/catalog-client';\nimport '@backstage/plugin-search-react';\n\nconst ENTITY_YAML = `metadata:\n  name: example\n  links:\n    - url: https://dashboard.example.com\n      title: My Dashboard\n      icon: dashboard`;\nconst useStyles = makeStyles(\n  (theme) => ({\n    code: {\n      borderRadius: 6,\n      margin: theme.spacing(2, 0),\n      background: theme.palette.type === \"dark\" ? \"#444\" : theme.palette.common.white\n    }\n  }),\n  { name: \"PluginCatalogEntityLinksEmptyState\" }\n);\nfunction EntityLinksEmptyState() {\n  const classes = useStyles();\n  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(Typography, { variant: \"body1\" }, \"No links defined for this entity. You can add links to your entity YAML as shown in the highlighted example below:\"), /* @__PURE__ */ React.createElement(\"div\", { className: classes.code }, /* @__PURE__ */ React.createElement(\n    CodeSnippet,\n    {\n      text: ENTITY_YAML,\n      language: \"yaml\",\n      showLineNumbers: true,\n      highlightedNumbers: [3, 4, 5, 6],\n      customStyle: { background: \"inherit\", fontSize: \"115%\" }\n    }\n  )), /* @__PURE__ */ React.createElement(\n    Button,\n    {\n      variant: \"contained\",\n      color: \"primary\",\n      target: \"_blank\",\n      href: \"https://backstage.io/docs/features/software-catalog/descriptor-format#links-optional\"\n    },\n    \"Read more\"\n  ));\n}\n\nconst EntityLinksCard = (props) => {\n  var _a;\n  const { cols = void 0, variant } = props;\n  const { entity } = useEntity();\n  const app = useApp();\n  const iconResolver = (key) => {\n    var _a2;\n    return key ? (_a2 = app.getSystemIcon(key)) != null ? _a2 : LanguageIcon : LanguageIcon;\n  };\n  const links = (_a = entity == null ? void 0 : entity.metadata) == null ? void 0 : _a.links;\n  return /* @__PURE__ */ React.createElement(InfoCard, { title: \"Links\", variant }, !links || links.length === 0 ? /* @__PURE__ */ React.createElement(EntityLinksEmptyState, null) : /* @__PURE__ */ React.createElement(\n    LinksGridList,\n    {\n      cols,\n      items: links.map(({ url, title, icon }) => ({\n        text: title != null ? title : url,\n        href: url,\n        Icon: iconResolver(icon)\n      }))\n    }\n  ));\n};\n\nexport { EntityLinksCard };\n//# sourceMappingURL=index-23b588f4.esm.js.map\n"],"names":["ENTITY_YAML","useStyles","theme","EntityLinksEmptyState","classes","EntityLinksCard","props","_a","cols","variant","entity","app","iconResolver","key","_a2","links","url","title","icon"],"sourceRoot":""}