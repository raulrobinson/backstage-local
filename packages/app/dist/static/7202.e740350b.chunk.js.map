{"version":3,"file":"static/7202.e740350b.chunk.js","mappings":"sZAoCA,MAAMA,EAAS,CACb,UAAS,IACT,aAAY,GACd,EACMC,EAAc,CAAC,CACnB,OAAAC,EACA,SAAAC,EACA,MAAAC,CACF,IAAM,CAOJ,MAAMC,KANY,KAAW,CAC3B,eAAgB,CACd,aAAc,OACd,GAAGH,EAAO,SAAWA,EAAO,SAAW,CAAC,CAC1C,CACF,CAAC,EACyB,EACpB,CAAE,QAASI,EAAkB,cAAAC,CAAc,KAAI,MAAmB,EAClEC,EAAQR,EAAOE,EAAO,SAAS,EAC/BO,EAAgBN,EAAS,OAAQO,GACjCR,EAAO,kBAAoB,cACzBI,EACK,GAEFC,EAAcG,CAAM,EAEtB,OAAOR,EAAO,iBAAoB,YAAcA,EAAO,gBAAgBQ,CAAM,CACrF,EACD,OAAuB,gBAAoB,WAAgB,KAAsB,gBAAoB,KAAe,CAAE,MAAOR,EAAO,MAAO,YAAaA,EAAO,WAAY,EAAGE,IAAU,EAAoB,gBAAoB,KAAe,KAAM,2CAA2C,EAAI,IAAI,EAAmB,gBAAoB,MAAO,CAAE,UAAWC,EAAQ,cAAe,EAAmB,gBAAoBG,EAAO,CAAE,cAAe,wBAAyB,SAAUC,CAAc,CAAC,CAAC,CAAC,CAC/e,EACME,EAAsBC,GAAU,CACpC,KAAM,CAAE,WAAAC,CAAW,EAAID,EACjB,CAACE,EAAaC,CAAc,KAAI,YAAS,CAAC,EAC1CC,KAAa,MAAO,IAAa,EACjC,CACJ,MAAOb,EACP,QAAAc,EACA,MAAAC,CACF,KAAI,WAAS,UACM,MAAMF,EAAW,YAAY,CAC5C,OAAQ,CACN,iDAAkD,IACpD,EACA,OAAQ,CACN,aACA,OACA,WACA,YACA,aACA,WACF,CACF,CAAC,GACe,MAAM,OAAQN,GAAW,CACvC,IAAIS,EACJ,MAAO,CAAC,GAAGA,EAAKT,EAAO,SAAS,cAAgB,MAAgBS,EAAG,2BAA2B,EAChG,CAAC,CACF,EACKC,EAAmBP,EAAWC,CAAW,EAC/C,OAAIG,EACqB,gBAAoB,IAAqB,KAAsB,gBAAoB,KAAS,KAAsB,gBAAoB,KAAU,IAAI,CAAC,CAAC,EAE3KC,EACqB,gBAAoB,IAAqB,KAAsB,gBAAoB,KAAS,KAAsB,gBACvI,KACA,CACE,SAAU,QACV,MAAO,yCACT,EACgB,gBAAoB,KAAa,CAAE,SAAU,OAAQ,KAAMA,EAAM,SAAS,CAAE,CAAC,CAC/F,CAAC,CAAC,EAEmB,gBAAoB,IAAqB,KAAsB,gBACpF,KACA,CACE,cAAeJ,EACf,SAAWV,GAAUW,EAAeX,CAAK,EACzC,KAAMS,EAAW,IAAI,CAAC,CAAE,MAAAQ,CAAM,EAAGjB,KAAW,CAC1C,GAAIA,EAAM,SAAS,EACnB,MAAAiB,CACF,EAAE,CACJ,CACF,EAAmB,gBAAoB,KAAS,CAAE,cAAe,kBAAmB,EAAGD,EAAiB,OAAO,IAAI,CAAClB,EAAQE,IAA0B,gBACpJH,EACA,CACE,IAAKG,EACL,OAAAF,EACA,SAAYC,GAAsB,CAAC,EACnC,MAAAC,CACF,CACF,CAAC,CAAC,CAAC,CACL,C","sources":["webpack://app/../../node_modules/@backstage/plugin-techdocs/dist/esm/TechDocsCustomHome-4b8ec1a3.esm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport useAsync from 'react-use/lib/useAsync';\nimport { makeStyles } from '@material-ui/core';\nimport { catalogApiRef, CATALOG_FILTER_EXISTS, useEntityOwnership } from '@backstage/plugin-catalog-react';\nimport { T as TechDocsPageWrapper, D as DocsTable, a as DocsCardGrid } from './index-8bf02c1c.esm.js';\nimport { Content, Progress, WarningPanel, CodeSnippet, HeaderTabs, ContentHeader, SupportButton } from '@backstage/core-components';\nimport { useApi } from '@backstage/core-plugin-api';\nimport '@backstage/errors';\nimport 'event-source-polyfill';\nimport 'react-router-dom';\nimport '@backstage/plugin-techdocs-react';\nimport 'react-use/lib/useAsyncRetry';\nimport '@backstage/plugin-search-react';\nimport '@material-ui/core/Typography';\nimport '@material-ui/lab';\nimport '@material-ui/icons/Close';\nimport '@backstage/integration-react';\nimport 'dompurify';\nimport '@backstage/integration';\nimport '@material-ui/icons/FeedbackOutlined';\nimport 'react-dom';\nimport 'git-url-parse';\nimport '@material-ui/icons/Menu';\nimport '@material-ui/core/IconButton';\nimport 'react-use/lib/useCopyToClipboard';\nimport 'react-helmet';\nimport '@material-ui/core/styles';\nimport '@material-ui/icons/Code';\nimport '@backstage/catalog-model';\nimport 'lodash';\nimport '@material-ui/icons/Settings';\nimport '@material-ui/icons/Share';\nimport '@material-ui/styles';\nimport '@material-ui/icons/Star';\nimport '@material-ui/icons/StarBorder';\n\nconst panels = {\n  DocsTable,\n  DocsCardGrid\n};\nconst CustomPanel = ({\n  config,\n  entities,\n  index\n}) => {\n  const useStyles = makeStyles({\n    panelContainer: {\n      marginBottom: \"2rem\",\n      ...config.panelCSS ? config.panelCSS : {}\n    }\n  });\n  const classes = useStyles();\n  const { loading: loadingOwnership, isOwnedEntity } = useEntityOwnership();\n  const Panel = panels[config.panelType];\n  const shownEntities = entities.filter((entity) => {\n    if (config.filterPredicate === \"ownedByUser\") {\n      if (loadingOwnership) {\n        return false;\n      }\n      return isOwnedEntity(entity);\n    }\n    return typeof config.filterPredicate === \"function\" && config.filterPredicate(entity);\n  });\n  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(ContentHeader, { title: config.title, description: config.description }, index === 0 ? /* @__PURE__ */ React.createElement(SupportButton, null, \"Discover documentation in your ecosystem.\") : null), /* @__PURE__ */ React.createElement(\"div\", { className: classes.panelContainer }, /* @__PURE__ */ React.createElement(Panel, { \"data-testid\": \"techdocs-custom-panel\", entities: shownEntities })));\n};\nconst TechDocsCustomHome = (props) => {\n  const { tabsConfig } = props;\n  const [selectedTab, setSelectedTab] = useState(0);\n  const catalogApi = useApi(catalogApiRef);\n  const {\n    value: entities,\n    loading,\n    error\n  } = useAsync(async () => {\n    const response = await catalogApi.getEntities({\n      filter: {\n        \"metadata.annotations.backstage.io/techdocs-ref\": CATALOG_FILTER_EXISTS\n      },\n      fields: [\n        \"apiVersion\",\n        \"kind\",\n        \"metadata\",\n        \"relations\",\n        \"spec.owner\",\n        \"spec.type\"\n      ]\n    });\n    return response.items.filter((entity) => {\n      var _a;\n      return !!((_a = entity.metadata.annotations) == null ? void 0 : _a[\"backstage.io/techdocs-ref\"]);\n    });\n  });\n  const currentTabConfig = tabsConfig[selectedTab];\n  if (loading) {\n    return /* @__PURE__ */ React.createElement(TechDocsPageWrapper, null, /* @__PURE__ */ React.createElement(Content, null, /* @__PURE__ */ React.createElement(Progress, null)));\n  }\n  if (error) {\n    return /* @__PURE__ */ React.createElement(TechDocsPageWrapper, null, /* @__PURE__ */ React.createElement(Content, null, /* @__PURE__ */ React.createElement(\n      WarningPanel,\n      {\n        severity: \"error\",\n        title: \"Could not load available documentation.\"\n      },\n      /* @__PURE__ */ React.createElement(CodeSnippet, { language: \"text\", text: error.toString() })\n    )));\n  }\n  return /* @__PURE__ */ React.createElement(TechDocsPageWrapper, null, /* @__PURE__ */ React.createElement(\n    HeaderTabs,\n    {\n      selectedIndex: selectedTab,\n      onChange: (index) => setSelectedTab(index),\n      tabs: tabsConfig.map(({ label }, index) => ({\n        id: index.toString(),\n        label\n      }))\n    }\n  ), /* @__PURE__ */ React.createElement(Content, { \"data-testid\": \"techdocs-content\" }, currentTabConfig.panels.map((config, index) => /* @__PURE__ */ React.createElement(\n    CustomPanel,\n    {\n      key: index,\n      config,\n      entities: !!entities ? entities : [],\n      index\n    }\n  ))));\n};\n\nexport { TechDocsCustomHome };\n//# sourceMappingURL=TechDocsCustomHome-4b8ec1a3.esm.js.map\n"],"names":["panels","CustomPanel","config","entities","index","classes","loadingOwnership","isOwnedEntity","Panel","shownEntities","entity","TechDocsCustomHome","props","tabsConfig","selectedTab","setSelectedTab","catalogApi","loading","error","_a","currentTabConfig","label"],"sourceRoot":""}