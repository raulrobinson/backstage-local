{"version":3,"file":"static/1638.c303f74a.chunk.js","mappings":"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","sources":["webpack://app/../../node_modules/@graphiql/react/dist/brace-fold.es.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { a as codemirror } from \"./codemirror.es.js\";\nfunction _mergeNamespaces(n, m) {\n  m.forEach(function(e) {\n    e && typeof e !== \"string\" && !Array.isArray(e) && Object.keys(e).forEach(function(k) {\n      if (k !== \"default\" && !(k in n)) {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function() {\n            return e[k];\n          }\n        });\n      }\n    });\n  });\n  return Object.freeze(n);\n}\n__name(_mergeNamespaces, \"_mergeNamespaces\");\nvar braceFold$2 = { exports: {} };\n(function(module, exports) {\n  (function(mod) {\n    mod(codemirror.exports);\n  })(function(CodeMirror) {\n    function bracketFolding(pairs) {\n      return function(cm, start) {\n        var line = start.line, lineText = cm.getLine(line);\n        function findOpening(pair) {\n          var tokenType;\n          for (var at = start.ch, pass = 0; ; ) {\n            var found2 = at <= 0 ? -1 : lineText.lastIndexOf(pair[0], at - 1);\n            if (found2 == -1) {\n              if (pass == 1)\n                break;\n              pass = 1;\n              at = lineText.length;\n              continue;\n            }\n            if (pass == 1 && found2 < start.ch)\n              break;\n            tokenType = cm.getTokenTypeAt(CodeMirror.Pos(line, found2 + 1));\n            if (!/^(comment|string)/.test(tokenType))\n              return { ch: found2 + 1, tokenType, pair };\n            at = found2 - 1;\n          }\n        }\n        __name(findOpening, \"findOpening\");\n        function findRange(found2) {\n          var count = 1, lastLine = cm.lastLine(), end, startCh = found2.ch, endCh;\n          outer:\n            for (var i2 = line; i2 <= lastLine; ++i2) {\n              var text = cm.getLine(i2), pos = i2 == line ? startCh : 0;\n              for (; ; ) {\n                var nextOpen = text.indexOf(found2.pair[0], pos), nextClose = text.indexOf(found2.pair[1], pos);\n                if (nextOpen < 0)\n                  nextOpen = text.length;\n                if (nextClose < 0)\n                  nextClose = text.length;\n                pos = Math.min(nextOpen, nextClose);\n                if (pos == text.length)\n                  break;\n                if (cm.getTokenTypeAt(CodeMirror.Pos(i2, pos + 1)) == found2.tokenType) {\n                  if (pos == nextOpen)\n                    ++count;\n                  else if (!--count) {\n                    end = i2;\n                    endCh = pos;\n                    break outer;\n                  }\n                }\n                ++pos;\n              }\n            }\n          if (end == null || line == end)\n            return null;\n          return {\n            from: CodeMirror.Pos(line, startCh),\n            to: CodeMirror.Pos(end, endCh)\n          };\n        }\n        __name(findRange, \"findRange\");\n        var found = [];\n        for (var i = 0; i < pairs.length; i++) {\n          var open = findOpening(pairs[i]);\n          if (open)\n            found.push(open);\n        }\n        found.sort(function(a, b) {\n          return a.ch - b.ch;\n        });\n        for (var i = 0; i < found.length; i++) {\n          var range = findRange(found[i]);\n          if (range)\n            return range;\n        }\n        return null;\n      };\n    }\n    __name(bracketFolding, \"bracketFolding\");\n    CodeMirror.registerHelper(\"fold\", \"brace\", bracketFolding([[\"{\", \"}\"], [\"[\", \"]\"]]));\n    CodeMirror.registerHelper(\"fold\", \"brace-paren\", bracketFolding([[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]]));\n    CodeMirror.registerHelper(\"fold\", \"import\", function(cm, start) {\n      function hasImport(line) {\n        if (line < cm.firstLine() || line > cm.lastLine())\n          return null;\n        var start2 = cm.getTokenAt(CodeMirror.Pos(line, 1));\n        if (!/\\S/.test(start2.string))\n          start2 = cm.getTokenAt(CodeMirror.Pos(line, start2.end + 1));\n        if (start2.type != \"keyword\" || start2.string != \"import\")\n          return null;\n        for (var i = line, e = Math.min(cm.lastLine(), line + 10); i <= e; ++i) {\n          var text = cm.getLine(i), semi = text.indexOf(\";\");\n          if (semi != -1)\n            return { startCh: start2.end, end: CodeMirror.Pos(i, semi) };\n        }\n      }\n      __name(hasImport, \"hasImport\");\n      var startLine = start.line, has = hasImport(startLine), prev;\n      if (!has || hasImport(startLine - 1) || (prev = hasImport(startLine - 2)) && prev.end.line == startLine - 1)\n        return null;\n      for (var end = has.end; ; ) {\n        var next = hasImport(end.line + 1);\n        if (next == null)\n          break;\n        end = next.end;\n      }\n      return { from: cm.clipPos(CodeMirror.Pos(startLine, has.startCh + 1)), to: end };\n    });\n    CodeMirror.registerHelper(\"fold\", \"include\", function(cm, start) {\n      function hasInclude(line) {\n        if (line < cm.firstLine() || line > cm.lastLine())\n          return null;\n        var start2 = cm.getTokenAt(CodeMirror.Pos(line, 1));\n        if (!/\\S/.test(start2.string))\n          start2 = cm.getTokenAt(CodeMirror.Pos(line, start2.end + 1));\n        if (start2.type == \"meta\" && start2.string.slice(0, 8) == \"#include\")\n          return start2.start + 8;\n      }\n      __name(hasInclude, \"hasInclude\");\n      var startLine = start.line, has = hasInclude(startLine);\n      if (has == null || hasInclude(startLine - 1) != null)\n        return null;\n      for (var end = startLine; ; ) {\n        var next = hasInclude(end + 1);\n        if (next == null)\n          break;\n        ++end;\n      }\n      return {\n        from: CodeMirror.Pos(startLine, has + 1),\n        to: cm.clipPos(CodeMirror.Pos(end))\n      };\n    });\n  });\n})();\nvar braceFold = braceFold$2.exports;\nvar braceFold$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ _mergeNamespaces({\n  __proto__: null,\n  [Symbol.toStringTag]: \"Module\",\n  \"default\": braceFold\n}, [braceFold$2.exports]));\nexport { braceFold$1 as b };\n"],"names":["__defProp","__name","target","value","_mergeNamespaces","n","m","k","d","braceFold$2","module","exports","mod","CodeMirror","bracketFolding","pairs","cm","start","line","lineText","findOpening","pair","tokenType","at","pass","found2","findRange","count","lastLine","end","startCh","endCh","outer","i2","text","pos","nextOpen","nextClose","found","i","open","a","b","range","hasImport","start2","e","semi","startLine","has","prev","next","hasInclude","braceFold","braceFold$1"],"sourceRoot":""}