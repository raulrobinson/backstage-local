{"version":3,"file":"static/6406.049b282e.chunk.js","mappings":"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","sources":["webpack://app/../../node_modules/@graphiql/react/dist/searchcursor.es.js"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __name = (target, value) => __defProp(target, \"name\", { value, configurable: true });\nimport { a as codemirror } from \"./codemirror.es.js\";\nfunction _mergeNamespaces(n, m) {\n  m.forEach(function(e) {\n    e && typeof e !== \"string\" && !Array.isArray(e) && Object.keys(e).forEach(function(k) {\n      if (k !== \"default\" && !(k in n)) {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function() {\n            return e[k];\n          }\n        });\n      }\n    });\n  });\n  return Object.freeze(n);\n}\n__name(_mergeNamespaces, \"_mergeNamespaces\");\nvar searchcursor$2 = { exports: {} };\n(function(module, exports) {\n  (function(mod) {\n    mod(codemirror.exports);\n  })(function(CodeMirror) {\n    var Pos = CodeMirror.Pos;\n    function regexpFlags(regexp) {\n      var flags = regexp.flags;\n      return flags != null ? flags : (regexp.ignoreCase ? \"i\" : \"\") + (regexp.global ? \"g\" : \"\") + (regexp.multiline ? \"m\" : \"\");\n    }\n    __name(regexpFlags, \"regexpFlags\");\n    function ensureFlags(regexp, flags) {\n      var current = regexpFlags(regexp), target = current;\n      for (var i = 0; i < flags.length; i++)\n        if (target.indexOf(flags.charAt(i)) == -1)\n          target += flags.charAt(i);\n      return current == target ? regexp : new RegExp(regexp.source, target);\n    }\n    __name(ensureFlags, \"ensureFlags\");\n    function maybeMultiline(regexp) {\n      return /\\\\s|\\\\n|\\n|\\\\W|\\\\D|\\[\\^/.test(regexp.source);\n    }\n    __name(maybeMultiline, \"maybeMultiline\");\n    function searchRegexpForward(doc, regexp, start) {\n      regexp = ensureFlags(regexp, \"g\");\n      for (var line = start.line, ch = start.ch, last = doc.lastLine(); line <= last; line++, ch = 0) {\n        regexp.lastIndex = ch;\n        var string = doc.getLine(line), match = regexp.exec(string);\n        if (match)\n          return {\n            from: Pos(line, match.index),\n            to: Pos(line, match.index + match[0].length),\n            match\n          };\n      }\n    }\n    __name(searchRegexpForward, \"searchRegexpForward\");\n    function searchRegexpForwardMultiline(doc, regexp, start) {\n      if (!maybeMultiline(regexp))\n        return searchRegexpForward(doc, regexp, start);\n      regexp = ensureFlags(regexp, \"gm\");\n      var string, chunk = 1;\n      for (var line = start.line, last = doc.lastLine(); line <= last; ) {\n        for (var i = 0; i < chunk; i++) {\n          if (line > last)\n            break;\n          var curLine = doc.getLine(line++);\n          string = string == null ? curLine : string + \"\\n\" + curLine;\n        }\n        chunk = chunk * 2;\n        regexp.lastIndex = start.ch;\n        var match = regexp.exec(string);\n        if (match) {\n          var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\");\n          var startLine = start.line + before.length - 1, startCh = before[before.length - 1].length;\n          return {\n            from: Pos(startLine, startCh),\n            to: Pos(startLine + inside.length - 1, inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n            match\n          };\n        }\n      }\n    }\n    __name(searchRegexpForwardMultiline, \"searchRegexpForwardMultiline\");\n    function lastMatchIn(string, regexp, endMargin) {\n      var match, from = 0;\n      while (from <= string.length) {\n        regexp.lastIndex = from;\n        var newMatch = regexp.exec(string);\n        if (!newMatch)\n          break;\n        var end = newMatch.index + newMatch[0].length;\n        if (end > string.length - endMargin)\n          break;\n        if (!match || end > match.index + match[0].length)\n          match = newMatch;\n        from = newMatch.index + 1;\n      }\n      return match;\n    }\n    __name(lastMatchIn, \"lastMatchIn\");\n    function searchRegexpBackward(doc, regexp, start) {\n      regexp = ensureFlags(regexp, \"g\");\n      for (var line = start.line, ch = start.ch, first = doc.firstLine(); line >= first; line--, ch = -1) {\n        var string = doc.getLine(line);\n        var match = lastMatchIn(string, regexp, ch < 0 ? 0 : string.length - ch);\n        if (match)\n          return {\n            from: Pos(line, match.index),\n            to: Pos(line, match.index + match[0].length),\n            match\n          };\n      }\n    }\n    __name(searchRegexpBackward, \"searchRegexpBackward\");\n    function searchRegexpBackwardMultiline(doc, regexp, start) {\n      if (!maybeMultiline(regexp))\n        return searchRegexpBackward(doc, regexp, start);\n      regexp = ensureFlags(regexp, \"gm\");\n      var string, chunkSize = 1, endMargin = doc.getLine(start.line).length - start.ch;\n      for (var line = start.line, first = doc.firstLine(); line >= first; ) {\n        for (var i = 0; i < chunkSize && line >= first; i++) {\n          var curLine = doc.getLine(line--);\n          string = string == null ? curLine : curLine + \"\\n\" + string;\n        }\n        chunkSize *= 2;\n        var match = lastMatchIn(string, regexp, endMargin);\n        if (match) {\n          var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\");\n          var startLine = line + before.length, startCh = before[before.length - 1].length;\n          return {\n            from: Pos(startLine, startCh),\n            to: Pos(startLine + inside.length - 1, inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n            match\n          };\n        }\n      }\n    }\n    __name(searchRegexpBackwardMultiline, \"searchRegexpBackwardMultiline\");\n    var doFold, noFold;\n    if (String.prototype.normalize) {\n      doFold = /* @__PURE__ */ __name(function(str) {\n        return str.normalize(\"NFD\").toLowerCase();\n      }, \"doFold\");\n      noFold = /* @__PURE__ */ __name(function(str) {\n        return str.normalize(\"NFD\");\n      }, \"noFold\");\n    } else {\n      doFold = /* @__PURE__ */ __name(function(str) {\n        return str.toLowerCase();\n      }, \"doFold\");\n      noFold = /* @__PURE__ */ __name(function(str) {\n        return str;\n      }, \"noFold\");\n    }\n    function adjustPos(orig, folded, pos, foldFunc) {\n      if (orig.length == folded.length)\n        return pos;\n      for (var min = 0, max = pos + Math.max(0, orig.length - folded.length); ; ) {\n        if (min == max)\n          return min;\n        var mid = min + max >> 1;\n        var len = foldFunc(orig.slice(0, mid)).length;\n        if (len == pos)\n          return mid;\n        else if (len > pos)\n          max = mid;\n        else\n          min = mid + 1;\n      }\n    }\n    __name(adjustPos, \"adjustPos\");\n    function searchStringForward(doc, query, start, caseFold) {\n      if (!query.length)\n        return null;\n      var fold = caseFold ? doFold : noFold;\n      var lines = fold(query).split(/\\r|\\n\\r?/);\n      search:\n        for (var line = start.line, ch = start.ch, last = doc.lastLine() + 1 - lines.length; line <= last; line++, ch = 0) {\n          var orig = doc.getLine(line).slice(ch), string = fold(orig);\n          if (lines.length == 1) {\n            var found = string.indexOf(lines[0]);\n            if (found == -1)\n              continue search;\n            var start = adjustPos(orig, string, found, fold) + ch;\n            return {\n              from: Pos(line, adjustPos(orig, string, found, fold) + ch),\n              to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold) + ch)\n            };\n          } else {\n            var cutFrom = string.length - lines[0].length;\n            if (string.slice(cutFrom) != lines[0])\n              continue search;\n            for (var i = 1; i < lines.length - 1; i++)\n              if (fold(doc.getLine(line + i)) != lines[i])\n                continue search;\n            var end = doc.getLine(line + lines.length - 1), endString = fold(end), lastLine = lines[lines.length - 1];\n            if (endString.slice(0, lastLine.length) != lastLine)\n              continue search;\n            return {\n              from: Pos(line, adjustPos(orig, string, cutFrom, fold) + ch),\n              to: Pos(line + lines.length - 1, adjustPos(end, endString, lastLine.length, fold))\n            };\n          }\n        }\n    }\n    __name(searchStringForward, \"searchStringForward\");\n    function searchStringBackward(doc, query, start, caseFold) {\n      if (!query.length)\n        return null;\n      var fold = caseFold ? doFold : noFold;\n      var lines = fold(query).split(/\\r|\\n\\r?/);\n      search:\n        for (var line = start.line, ch = start.ch, first = doc.firstLine() - 1 + lines.length; line >= first; line--, ch = -1) {\n          var orig = doc.getLine(line);\n          if (ch > -1)\n            orig = orig.slice(0, ch);\n          var string = fold(orig);\n          if (lines.length == 1) {\n            var found = string.lastIndexOf(lines[0]);\n            if (found == -1)\n              continue search;\n            return {\n              from: Pos(line, adjustPos(orig, string, found, fold)),\n              to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold))\n            };\n          } else {\n            var lastLine = lines[lines.length - 1];\n            if (string.slice(0, lastLine.length) != lastLine)\n              continue search;\n            for (var i = 1, start = line - lines.length + 1; i < lines.length - 1; i++)\n              if (fold(doc.getLine(start + i)) != lines[i])\n                continue search;\n            var top = doc.getLine(line + 1 - lines.length), topString = fold(top);\n            if (topString.slice(topString.length - lines[0].length) != lines[0])\n              continue search;\n            return {\n              from: Pos(line + 1 - lines.length, adjustPos(top, topString, top.length - lines[0].length, fold)),\n              to: Pos(line, adjustPos(orig, string, lastLine.length, fold))\n            };\n          }\n        }\n    }\n    __name(searchStringBackward, \"searchStringBackward\");\n    function SearchCursor(doc, query, pos, options) {\n      this.atOccurrence = false;\n      this.afterEmptyMatch = false;\n      this.doc = doc;\n      pos = pos ? doc.clipPos(pos) : Pos(0, 0);\n      this.pos = { from: pos, to: pos };\n      var caseFold;\n      if (typeof options == \"object\") {\n        caseFold = options.caseFold;\n      } else {\n        caseFold = options;\n        options = null;\n      }\n      if (typeof query == \"string\") {\n        if (caseFold == null)\n          caseFold = false;\n        this.matches = function(reverse, pos2) {\n          return (reverse ? searchStringBackward : searchStringForward)(doc, query, pos2, caseFold);\n        };\n      } else {\n        query = ensureFlags(query, \"gm\");\n        if (!options || options.multiline !== false)\n          this.matches = function(reverse, pos2) {\n            return (reverse ? searchRegexpBackwardMultiline : searchRegexpForwardMultiline)(doc, query, pos2);\n          };\n        else\n          this.matches = function(reverse, pos2) {\n            return (reverse ? searchRegexpBackward : searchRegexpForward)(doc, query, pos2);\n          };\n      }\n    }\n    __name(SearchCursor, \"SearchCursor\");\n    SearchCursor.prototype = {\n      findNext: function() {\n        return this.find(false);\n      },\n      findPrevious: function() {\n        return this.find(true);\n      },\n      find: function(reverse) {\n        var head = this.doc.clipPos(reverse ? this.pos.from : this.pos.to);\n        if (this.afterEmptyMatch && this.atOccurrence) {\n          head = Pos(head.line, head.ch);\n          if (reverse) {\n            head.ch--;\n            if (head.ch < 0) {\n              head.line--;\n              head.ch = (this.doc.getLine(head.line) || \"\").length;\n            }\n          } else {\n            head.ch++;\n            if (head.ch > (this.doc.getLine(head.line) || \"\").length) {\n              head.ch = 0;\n              head.line++;\n            }\n          }\n          if (CodeMirror.cmpPos(head, this.doc.clipPos(head)) != 0) {\n            return this.atOccurrence = false;\n          }\n        }\n        var result = this.matches(reverse, head);\n        this.afterEmptyMatch = result && CodeMirror.cmpPos(result.from, result.to) == 0;\n        if (result) {\n          this.pos = result;\n          this.atOccurrence = true;\n          return this.pos.match || true;\n        } else {\n          var end = Pos(reverse ? this.doc.firstLine() : this.doc.lastLine() + 1, 0);\n          this.pos = { from: end, to: end };\n          return this.atOccurrence = false;\n        }\n      },\n      from: function() {\n        if (this.atOccurrence)\n          return this.pos.from;\n      },\n      to: function() {\n        if (this.atOccurrence)\n          return this.pos.to;\n      },\n      replace: function(newText, origin) {\n        if (!this.atOccurrence)\n          return;\n        var lines = CodeMirror.splitLines(newText);\n        this.doc.replaceRange(lines, this.pos.from, this.pos.to, origin);\n        this.pos.to = Pos(this.pos.from.line + lines.length - 1, lines[lines.length - 1].length + (lines.length == 1 ? this.pos.from.ch : 0));\n      }\n    };\n    CodeMirror.defineExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n      return new SearchCursor(this.doc, query, pos, caseFold);\n    });\n    CodeMirror.defineDocExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n      return new SearchCursor(this, query, pos, caseFold);\n    });\n    CodeMirror.defineExtension(\"selectMatches\", function(query, caseFold) {\n      var ranges = [];\n      var cur = this.getSearchCursor(query, this.getCursor(\"from\"), caseFold);\n      while (cur.findNext()) {\n        if (CodeMirror.cmpPos(cur.to(), this.getCursor(\"to\")) > 0)\n          break;\n        ranges.push({ anchor: cur.from(), head: cur.to() });\n      }\n      if (ranges.length)\n        this.setSelections(ranges, 0);\n    });\n  });\n})();\nvar searchcursor = searchcursor$2.exports;\nvar searchcursor$1 = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ _mergeNamespaces({\n  __proto__: null,\n  [Symbol.toStringTag]: \"Module\",\n  \"default\": searchcursor\n}, [searchcursor$2.exports]));\nexport { searchcursor$2 as a, searchcursor$1 as s };\n"],"names":["__defProp","__name","target","value","_mergeNamespaces","n","m","e","k","d","searchcursor$2","module","exports","mod","CodeMirror","Pos","regexpFlags","regexp","flags","ensureFlags","current","i","maybeMultiline","searchRegexpForward","doc","start","line","ch","last","string","match","searchRegexpForwardMultiline","chunk","curLine","before","inside","startLine","startCh","lastMatchIn","endMargin","from","newMatch","end","searchRegexpBackward","first","searchRegexpBackwardMultiline","chunkSize","doFold","noFold","str","adjustPos","orig","folded","pos","foldFunc","min","max","mid","len","searchStringForward","query","caseFold","fold","lines","search","found","cutFrom","endString","lastLine","searchStringBackward","top","topString","SearchCursor","options","reverse","pos2","head","result","newText","origin","ranges","cur","searchcursor","searchcursor$1"],"sourceRoot":""}